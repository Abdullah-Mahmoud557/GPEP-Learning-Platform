  @model Userstories.Models.Course

@{
    ViewData["Title"] = "Course Details";
    var learnerId = ViewBag.LearnerId ?? 3;
}

<div class="container mt-5">
    <div class="card shadow-lg border-0">
        <div class="card-header bg-gradient-primary text-white d-flex justify-content-between align-items-center">
            <h2 class="mb-0 fw-bold text-primary">@Model.Title</h2>
        </div>
        <div class="card-body">
            <div class="row mb-3">
                <div class="col-md-6">
                    <p><strong>Learning Objective:</strong></p>
                    <p>@Model.LearningObjective</p>
                </div>
                <div class="col-md-6">
                    <p><strong>Credit Points:</strong></p>
                    <p>@Model.CreditPoints</p>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-6">
                    <p><strong>Difficulty Level:</strong></p>
                    <p>@Model.DifficultyLevel</p>
                </div>
                <div class="col-md-6">
                    <p><strong>Description:</strong></p>
                    <p>@Model.Description</p>
                </div>
            </div>
        </div>
        <div class="card-footer d-flex justify-content-between">
<button class="btn btn-primary btn-lg me-2 px-4" onclick="showLearnerIdPopup(@Model.CourseID)" data-bs-toggle="tooltip" title="Enroll in this course">
    <i class="fas fa-user-plus"></i> Prerequisites for a Learner
</button>
            <a  href="@Url.Action("Modules", "Instructor", new { id = @Model.CourseID  })" class="btn btn-info btn-lg me-2 px-4" data-bs-toggle="tooltip" title="View course modules">
                <i class="fas fa-list"></i> View Modules
            </a>
           
  <button class="btn btn-secondary btn-lg px-4" onclick="history.back()" data-bs-toggle="tooltip" title="Go back to all courses">
    <i class="fas fa-arrow-left"></i> Go Back
</button>
        </div>
    </div>
</div>

<!-- Enroll Confirmation Modal -->
<div class="modal fade" id="enrollModal" tabindex="-1" aria-labelledby="enrollModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title fw-bold" id="enrollModalLabel">show Prerequisites for a certain student</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                 <div id="prerequisitesMessage" class="mt-3 text-warning">
                    <span id="loadingSpinner" class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
                    Fetching prerequisites...
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btn-lg" data-bs-dismiss="modal" onclick="refreshPage()">OK</button> 
                <form id="enrollForm" method="post" action="/Courses/Enroll">
                    <input type="hidden" name="courseId" id="enrollCourseId">
                    <input type="hidden" name="learnerId" id="enrollLearnerId">
                 </form>
            </div>
        </div>
    </div>
</div>
  <script>
      function showLearnerIdPopup(courseId) {
          const learnerId = prompt("Please enter the Learner ID:");
          if (learnerId) {
              showEnrollPopup(courseId, learnerId);
          }
      }

      async function showEnrollPopup(courseId, learnerId) {
          const enrollModal = new bootstrap.Modal(document.getElementById('enrollModal'));
          const messageContainer = document.getElementById('prerequisitesMessage');
          const spinner = document.getElementById('loadingSpinner');

          // Reset modal state
          spinner.style.display = 'inline-block';
          messageContainer.innerText = 'Fetching prerequisites...';

          // Populate hidden fields
          document.getElementById('enrollCourseId').value = courseId;
          document.getElementById('enrollLearnerId').value = learnerId;

          try {
              const response = await fetch(`/Courses/Prerequisites?courseId=${courseId}&learnerId=${learnerId}`);
              if (!response.ok) throw new Error('Network response was not ok');
              const data = await response.json();

              // Display fetched prerequisites
              spinner.style.display = 'none';
              messageContainer.innerHTML = ''; // Clear previous messages

              const lines = data.message.split('\n');
              lines.forEach((line, index) => {
                  const p = document.createElement('p');
                  line = line.replace(/You/g, 'this student');
                  if (index === 0) {
                      p.style.color = 'black';
                  } else if (line.includes('Not')) {
                      p.style.color = 'red';
                  } else {
                      p.style.color = 'green';
                  }
                  p.textContent = line;
                  messageContainer.appendChild(p);
              });
          } catch (error) {
              console.error('Error fetching prerequisites:', error);
              spinner.style.display = 'none';
              messageContainer.innerText = 'Failed to fetch prerequisites. Please try again later.';
          }

          enrollModal.show();
      }
      function refreshPage() {
          location.reload();
      }
   </script>